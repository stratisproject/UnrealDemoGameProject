/**
 * NOTE: This class is auto generated by  Generator
 * https://github.com/Tools/-generator
 * Do not edit the class manually.
 */

#include "NFTInfo.h"

#include "Helpers.h"
#include "Log.h"

#include "Templates/SharedPointer.h"

namespace stratis {
namespace nft {

void NFTInfo::WriteJson(JsonWriter &Writer) const {
  Writer->WriteObjectStart();
  if (Name.IsSet()) {
    Writer->WriteIdentifierPrefix(TEXT("name"));
    WriteJsonValue(Writer, Name.GetValue());
  }
  if (Category.IsSet()) {
    Writer->WriteIdentifierPrefix(TEXT("category"));
    WriteJsonValue(Writer, Category.GetValue());
  }
  if (Image.IsSet()) {
    Writer->WriteIdentifierPrefix(TEXT("image"));
    WriteJsonValue(Writer, Image.GetValue());
  }
  if (Description.IsSet()) {
    Writer->WriteIdentifierPrefix(TEXT("description"));
    WriteJsonValue(Writer, Description.GetValue());
  }
  if (ExternalUrl.IsSet()) {
    Writer->WriteIdentifierPrefix(TEXT("external_url"));
    WriteJsonValue(Writer, ExternalUrl.GetValue());
  }
  if (Attributes.IsSet()) {
    Writer->WriteIdentifierPrefix(TEXT("attributes"));
    WriteJsonValue(Writer, Attributes.GetValue());
  }
  if (AnimationUrl.IsSet()) {
    Writer->WriteIdentifierPrefix(TEXT("animation_url"));
    WriteJsonValue(Writer, AnimationUrl.GetValue());
  }
  Writer->WriteObjectEnd();
}

bool NFTInfo::FromJson(const TSharedPtr<FJsonValue> &JsonValue) {
  const TSharedPtr<FJsonObject> *Object;
  if (!JsonValue->TryGetObject(Object))
    return false;

  bool ParseSuccess = true;

  ParseSuccess &= TryGetJsonValue(*Object, TEXT("name"), Name);
  ParseSuccess &= TryGetJsonValue(*Object, TEXT("category"), Category);
  ParseSuccess &= TryGetJsonValue(*Object, TEXT("image"), Image);
  ParseSuccess &= TryGetJsonValue(*Object, TEXT("description"), Description);
  ParseSuccess &= TryGetJsonValue(*Object, TEXT("external_url"), ExternalUrl);
  ParseSuccess &= TryGetJsonValue(*Object, TEXT("attributes"), Attributes);
  ParseSuccess &= TryGetJsonValue(*Object, TEXT("animation_url"), AnimationUrl);

  return ParseSuccess;
}

} // namespace nft
} // namespace stratis
